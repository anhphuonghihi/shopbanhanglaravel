var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(b,e,c){b instanceof String&&(b=String(b));for(var f=b.length,a=0;a<f;a++){var d=b[a];if(e.call(c,d,a,b))return{i:a,v:d}}return{i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(b,e,c){b!=Array.prototype&&b!=Object.prototype&&(b[e]=c.value)};
$jscomp.getGlobal=function(b){return"undefined"!=typeof window&&window===b?b:"undefined"!=typeof global&&null!=global?global:b};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(b,e,c,f){if(e){c=$jscomp.global;b=b.split(".");for(f=0;f<b.length-1;f++){var a=b[f];a in c||(c[a]={});c=c[a]}b=b[b.length-1];f=c[b];e=e(f);e!=f&&null!=e&&$jscomp.defineProperty(c,b,{configurable:!0,writable:!0,value:e})}};
$jscomp.polyfill("Array.prototype.find",function(b){return b?b:function(b,c){return $jscomp.findInternal(this,b,c).v}},"es6","es3");var SV=window.SV||{};SV.MultiPrefix=SV.MultiPrefix||{};
(function(b,e,c,f){b.extend(SV.MultiPrefix,{svMultiPrefixCounter:1});b.fn.extend({multiPrefixSelectorUniqueId:function(){var b=this.attr("id");b||(b="js-SVMultiPrefixUniqueId"+SV.MultiPrefix.svMultiPrefixCounter,this.attr("id",b),this.attr("data-sv-multiprefix-unique",SV.MultiPrefix.svMultiPrefixCounter),SV.MultiPrefix.svMultiPrefixCounter++);return b}});SV.MultiPrefix.PrefixMenu=XF.Element.newHandler({options:{realInput:null},init:function(){var a=this.$target,d=a.clone().insertAfter(a).removeAttr("data-xf-init").removeAttr("id").removeClass("u-noJsOnly");
this.template=this.$target.parent().find('script[type="text/template"]').html();this.template||(console.error("No prefix template could be found"),this.template="");a.remove();d.on("config-update",b.proxy(this,"initSelect2"));d.on("select2:unselect",b.proxy(this,"applyFilterMenuFix"));this.options.realInput=d;d.trigger("config-update")},loadPrefixes:function(a){var d=[];a.find("option").each(function(){var a=b(this);d[a.attr("value")]={prefix_id:a.attr("value"),title:a.text(),css_class:a.attr("data-prefix-class")}});
this.prefixes=d},applyFilterMenuFix:function(){var a=b(".js-filterMenuBody #"+this.options.realInput.multiPrefixSelectorUniqueId());if(a.length&&(a=a.parent().parent().parent().parent().parent().parent().xfUniqueId(),""!==a&&void 0!==a)){var d=b('[aria-controls="'+a+'"]');setTimeout(function(){d.click()},0)}},initSelect2:function(){var a=this.options.realInput,d={width:"100%",minimumSelectionLength:parseInt(a.data("min-tokens"),10),maximumSelectionLength:parseInt(a.data("max-tokens"),10),containerCssClass:"input prefix--title",
selectOnClose:!1,placeholder:XF.phrase("sv_prefix_placeholder",null,"Prefix..."),disabled:this.options.realInput.prop("disabled"),templateResult:b.proxy(this,"renderPrefix"),templateSelection:b.proxy(this,"renderPrefix"),debug:!1},c=a.val();"string"===typeof c&&(c=null);var e=d.maximumSelectionLength;c=c&&e&&c.length>e;var g=a.find('option[value="0"]');c||1!==e?(g.remove(),a.attr("multiple","multiple")):(d.minimumSelectionLength=void 0,d.maximumSelectionLength=void 0,g.length||a.prepend(b('<option value="0" data-prefix-class="label" />').text(XF.phrase("sv_multiprefix_none",
null,"(None)"))),a.removeAttr("multiple"));this.loadPrefixes(a);g=!0;a.multiPrefixSelectorUniqueId();a.data("select2")&&(a.select2("destroy"),g=!1);a.select2(d);c||1!==e?(b('b[role="presentation"]').show(),b(".select2-selection__arrow i").hide()):(b('b[role="presentation"]').hide(),g?b(".select2-selection__arrow").append('<i class="fa fa-angle-down"></i>'):b(".select2-selection__arrow i").show());c&&b(".select2-search__field").click()},renderPrefix:function(a){return a.id&&""!==this.template?b(Mustache.render(this.template,
{rich_prefix:this.prefixes[a.id]})):a.text}});SV.MultiPrefix.PrefixLoader=XF.Element.newHandler({options:{listenTo:"",initUpdate:!0,href:"",uniqueId:""},init:function(){if(this.$target.is("select")){if(this.options.uniqueId=this.$target.multiPrefixSelectorUniqueId(),this.options.href){var a=this.options.listenTo?XF.findRelativeIf(this.options.listenTo,this.$target):b([]);a.length?(a.on("change",b.proxy(this,"loadPrefixes")),this.options.initUpdate&&a.trigger("change")):console.error("Cannot load prefixes dynamically as no element set to listen to for changes")}}else console.error("Must trigger on select")},
loadPrefixes:function(a){XF.ajax("POST",this.options.href,{val:b(a.target).val()},b.proxy(this,"loadSuccess"))},loadSuccess:function(a){if(a.html){var d=b("#js-SVMultiPrefixUniqueId"+(parseInt(this.$target.attr("data-sv-multiprefix-unique"),10)+1));XF.setupHtmlInsert(a.html,function(a){var c=d.val();"string"===typeof c&&(c=[c]);a.each(function(){var a=b(this).find("select");if(a.length){d.empty().append(a.children());c?b.each(c,function(a,b){d.find('option[value="'+b+'"]').prop("selected",!0)}):d.find("option").first().prop("checked",
!0);var e=a.data("min-tokens");a=a.data("max-tokens");d.data("min-tokens",e).attr("data-max-tokens",a).data("max-tokens",a).attr("data-min-tokens",e);d.find("option:selected");d.trigger("config-update");return!1}})})}}});XF.QuickThread&&(SV.MultiPrefix.QuickThread=XF.extend(XF.QuickThread,{__backup:{reset:"_reset"},reset:function(a,c){b('select[name="prefix_id[]"]').val("").trigger("change");this._reset(a,c)}}),XF.Element.register("quick-thread","SV.MultiPrefix.QuickThread"));XF.Element.register("sv-multi-prefix-loader",
"SV.MultiPrefix.PrefixLoader");XF.Element.register("sv-multi-prefix-menu","SV.MultiPrefix.PrefixMenu")})(jQuery,window,document);
